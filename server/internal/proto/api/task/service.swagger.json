{
  "swagger": "2.0",
  "info": {
    "title": "api/task/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TaskService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/task/cancel": {
      "post": {
        "operationId": "TaskService_CancelTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskCancelTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskCancelTaskRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/task/list": {
      "post": {
        "operationId": "TaskService_ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskListTasksRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/task/move": {
      "post": {
        "operationId": "TaskService_RemoveTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskRemoveTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskRemoveTaskRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/api/task/retry": {
      "post": {
        "operationId": "TaskService_RetryTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskRetryTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskRetryTaskRequest"
            }
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "taskCancelTaskRequest": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "taskCancelTaskResponse": {
      "type": "object"
    },
    "taskListTasksRequest": {
      "type": "object",
      "properties": {
        "pageNum": {
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "taskListTasksResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/taskTask"
          }
        }
      }
    },
    "taskRemoveTaskRequest": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "taskRemoveTaskResponse": {
      "type": "object"
    },
    "taskRetryTaskRequest": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "taskRetryTaskResponse": {
      "type": "object"
    },
    "taskTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: gorm:\"not null;unique\""
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: gorm:\"serializer:protobuf_timestamp;type:datetime\""
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: gorm:\"serializer:protobuf_timestamp;type:datetime\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: gorm:\"not null;\""
        },
        "progress": {
          "type": "number",
          "format": "double"
        },
        "progressState": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "option": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/taskTaskState"
        }
      }
    },
    "taskTaskState": {
      "type": "string",
      "enum": [
        "TASK_STATE_UNSPECIFIED",
        "TASK_STATE_PENDING",
        "TASK_STATE_RUNNING",
        "TASK_STATE_SUCCEEDED",
        "TASK_STATE_CANCELING",
        "TASK_STATE_CANCELED",
        "TASK_STATE_FAILED"
      ],
      "default": "TASK_STATE_UNSPECIFIED"
    }
  }
}
